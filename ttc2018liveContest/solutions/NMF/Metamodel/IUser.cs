//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace TTC2018.LiveContest.SocialNetwork
{
    
    
    /// <summary>
    /// The public interface for User
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(User))]
    [XmlDefaultImplementationTypeAttribute(typeof(User))]
    [ModelRepresentationClassAttribute("https://www.transformation-tool-contest.eu/2018/social_media#//User")]
    public interface IUser : IModelElement
    {
        
        /// <summary>
        /// The id property
        /// </summary>
        [DisplayNameAttribute("id")]
        [CategoryAttribute("User")]
        [XmlElementNameAttribute("id")]
        [IdAttribute()]
        [XmlAttributeAttribute(true)]
        string Id
        {
            get;
            set;
        }
        
        /// <summary>
        /// The name property
        /// </summary>
        [DisplayNameAttribute("name")]
        [CategoryAttribute("User")]
        [XmlElementNameAttribute("name")]
        [XmlAttributeAttribute(true)]
        string Name
        {
            get;
            set;
        }
        
        /// <summary>
        /// The submissions property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("submissions")]
        [CategoryAttribute("User")]
        [XmlElementNameAttribute("submissions")]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("submitter")]
        [ConstantAttribute()]
        ISetExpression<ISubmission> Submissions
        {
            get;
        }
        
        /// <summary>
        /// The likes property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("likes")]
        [CategoryAttribute("User")]
        [XmlElementNameAttribute("likes")]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("likedBy")]
        [ConstantAttribute()]
        ISetExpression<IComment> Likes
        {
            get;
        }
        
        /// <summary>
        /// The friends property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("friends")]
        [CategoryAttribute("User")]
        [XmlElementNameAttribute("friends")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        ISetExpression<IUser> Friends
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Id property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IdChanging;
        
        /// <summary>
        /// Gets fired when the Id property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IdChanged;
        
        /// <summary>
        /// Gets fired before the Name property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NameChanging;
        
        /// <summary>
        /// Gets fired when the Name property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NameChanged;
    }
}

